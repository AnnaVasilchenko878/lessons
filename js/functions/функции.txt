Объявить функцию 

Виды функций:
    function declaration(definition): 
        - создается до начала выполнения скрипта
        - может быть вызвана до ее объявления (hosting)
            function Name(arg) {
            return arg
            }

    function expression: (функциональное выражение)
        - присваиваем в переменную
        - создается когда код до нее доходит
        - анонимная
        - вызывается после
        let calc = function(a,b) {
            return (a+b)
        }

    стрелочные:
        - не имеют контекста вызова
        let func = () =>{}

    конструкторы:
     - создают объекты
     - используют оператор new

     function MyClass {
        this.property = value;
        this.method = function(){}
    }

    iffy(immediately-invoked function expression):
        - вызывается сразу после определения
        - используется для scoup переменных 
        (function(){

        })(параметр)

    call-back:
        - передается как параметр
        - функция которая принимает называется высшего порядка
     array.filter(()=>)

Области видимости: 
    1. Глобальная - объявлена вне любой функции доступная везде
    2. Локальная(Функциональная) - объявлена внутри функции и видна вложенным в нее функциям
    3. Блочная - объявлена внутри блока {}


Узнать количество параметров которые принимает функция 
    function_name.length
Добавить не фиксированное количество аргументов
    function Name_f(...arg) {}
    let funcion_name = (...arg) => {}
Факториал
    return(condition)?yes:no
НОД (наибольший общий делитель из 2-х в рекурсии)
    if(number == true)
    return (number, number%number2)
Pандомное число от и до 
    let number = Math.floor(min + Math.random()*(max+1-nim))

- параметры что в скобках при объявлении
- внутри функций локальные переменные

Методы и свойства
Метод - вспомогательные функции
str.toUpperCase()

Свойства - вспомогательные значение, без скобок str.length

Как работают функции:
1. Объявляется перемененная с названием в глобальной области выполнения, она хранит в памяти описание функции
2. При вызове новая область передается в стек выполнения
3. Когда функция встречает закрывающую скобку или return, локальные области выполнения выходят из стека (становятся недоступными переменные, аргументы и прочее)
4. Функция возвращаетиз стека результат либо в другую локальную область либо в глобальную
5. Все локальные переменные в функции стираются

Замыкание - коллекция переменных из области видимости


Создать и записать функцию при вызове 

    function имя(параметр, колбек) {
        код
        вызов коблек()
    }
    вызов_первой_функции(фргумент, function() {
        код
    })

Создать 2 функции и из 2ой сделать call-back
    function first(arg, second) {
        код
        second()
    }
    function second() {
        код
    }

first(arg, second());

Вернуть из функции объект
return {key: value,
        key: value}