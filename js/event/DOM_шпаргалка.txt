DOM - Document Object Model, дерево узлов которое связано отношениями родитель - ребенок

Получить элемент по id
имя_переменной = document.getElementById('id_элемента')

Получить псевдомассив по тегам
имя_переменной = document.getElementsByTagName('имя_тега'); 

Получить псевдомассив по атрубуту
имя_переменной = document.getElementsByName('имя_атрибута');

Получить псевдомассив по классу
имя_переменной = document.getElementsByClassName('имя_класса');

Получить псевдомассив через селектор (+ forEach)
имя_переменной = document.querySelectorAll('.селектор_класса')
имя_переменной = document.querySelectorAll('#селектор_id')
имя_переменной = document.querySelectorAll('[селектор_атрибута])

Получить конкретный элемент из псевдомассива
имя_переменной = document.querySelectorAll('селектор')[индекс]

Добавить атрибут
имя_элемента.имя_атрибута = 'значение'
имя_эл-та.setAttribute('имя_атрибута', 'значение');

Изменить стиль элемента
имя_элемента.style.имяСвойства = 'значение'

Изменить стиль составного свойство
имя_элемента.style.имя_свойства = 'значение значение значение'

Изменить группу свойств
Object.assign(имя_элемента.style, имя_объекта_со_стилями)

Перебрать эл-ты 
    псевдомассив.forEach(function(аргументы){})

Cоздать элемент (просто создается)
    имя_переменной = document.createElement('имя_тега')

Создать текстовый узел
    имя_переменной = document.createTextNode(`текст`);

Добавить класс к элементу
    имя_елемента.classList.add(`имя_класса`);

Вставить елемент в html-разметку в конец body
document.body.appendChild(имя_элемента)

Вставить элемент в конец родителя
имя_родителя.appendChild(имя_элемента)

Вставить элемент в начало родителя
document.body.insertBefore(эл-т_который_надо_вставить, эл-т_перед_которым_нужно_вставить)

Удалить элемент в body
document.body.removeChild(имя_элемента)

Удалить элемент из родителя
имя_родителя.removeChild(имя_элемента_который_удаляем)

Заменить элементы 
document.body.replaceChild(эл-т_который_нужно_вставить, эл-т_который_нужно_заменить)

Втавить текст
элемент.innerHTML = 'текст' (не рекомендуется)
элемент.textContent = 'текст'

Вставить текстовый тега
элемент.innerHTML = '<h1>Текст</h1>'

Получить содержимое тега
имя_эл-та.innreHTML
имя_эл-та.textContent

Получить текстовое содержимое с потомками и игнорируя скрытый текст
имя_эл-та.innerText

Добавить обработчик события
1. имя_эл-та.имя_обработчика = function(){}

Добавить focus
1. имя_эл-та.onfocus  = function() {}
2. имя_эл-та.addEventListener('focus', function(){},options)

Значение объекта options
once: 
    false (будет срабатывать при каждом клике)
    true(удаляется после первого использования)
capture:
    false (по умолчанию)
    true (всплытие)
passive:
    false (по умолчанию)
    true (вызывает PreventDefault)
    
Добавить event/e объект события
- дает понять о конкретном элементе
имя_эл-та.addEventListener('имя_обработчика', function(event){})

Узнать координаты события
event.clientX
event.clientY

Узнать координаты прямоугольного элемента относительно родителя
эл-т = эл-т.getBoundingClientRect()

Узнать координаты
эл-т.left
эл-т.right
эл-т.top
эл-т.bottom

Узнать длину и ширину (c учетом padding и border)
эл-т.width
эл-т.height

Получить 'this' event из стрелочной имя_функции
event.currentTarget

Склонировать элмент (только клонирует, не отображает)
имя_переменной = э-л_который_клонируем.cloneNode(true);

Удалить обработчик событий
имя_эл-та.remobeEventListener('название_события', call-back)

Отложить выполнение скрипта по завершению загрузки DOM
document.addEventListener('DOMContentLoaded', function(){})

Проверить есть ли класса на элементе
if(э-лт.classList.contains('имя_класса'))

Вставить html через JS
эл-т.insertAdjacentHTML('куда_именно_вставить', 'html-код')

Вставить перед эл-том  
    эл-т.insertAdjacentHTML('beforebegin', 'html-код')
Вставить в родителя в начало 
    эл-т.insertAdjacentHTML('afterbegin', 'html-код')
Вставить в родителя в конец
    эл-т.insertAdjacentHTML('beforeend', 'html-код')
Вставить после эл-та
    эл-т.insertAdjacentHTML('afterend', 'html-код')

Обратиться к соседнему эл-т
перемен = эл-т.nextElementSibling;

Добавить обработчик двойной клик
эл-т.addEventListener('dblclick', ()=>{})
эл-т.ondblclick = () => {}

Добавить обработчик нажатие/зажатие
эл-т.addEventListener('mousedown', ()=>{})
эл-т.onmousedown = () => {} 

Добавить обработчик отжатие
эл-т.addEventListener('mouseup', function()=>{})
эл-т.onmouseup = () => {}

Добавить обрабочик движения курсора в пределах эл-та
эл-т.addEventListener('mousemove', ()=>{})
эл-т.onmousemove = () => {}

Добавить обрабочик наведения курсора на эл-т
эл-т.addEventListener('mouseover', ()=>{})
эл-т.onmouseover= () => {}

Добавить обрабочик выхода курсора с эл-та
эл-т.addEventLisneter('mouseout', ()=>{})
эл-т.onmouseout = () => {}


Где можно использовать какие обработчики
 - Смена текста элемента - keyup